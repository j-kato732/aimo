openapi: '3.0.2'
info:
  title: aimo_openapi
  version: '1.0'
servers:
  - url: http://api.server.test/v1
paths:
  /period:
    get:
      tags: 
      - "period"
      summary: "get annual period"
      responses:
        '200':
          description: OK          
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      format: int64
                    period:
                      type: string
                example:
                  - id: 1
                    period: 202005 
                  - id: 2
                    period: 202011
                  - id: 3
                    period: 202105 
  /aimoInfo/{exec_date}:
    get:
      tags:
      - "aimoInfo"
      summary: "get aimo inform"
      parameters:
      - name: exec_date
        in: path
        description: 取得対象日付
        required: true
        schema:
          $ref: '#/components/schemas/exec_date'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_aimoInfo_response'
  /userInfo:
    get:
      tags:
      - "userInfo"
      summary: "get user information"
      parameters:
      - name: user_id
        in: query
        description: ユーザID
        required: true
        schema:
          $ref: '#/components/schemas/get_userInfo_request'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/schemas/default_response'
                  result:
                    $ref: '#/components/schemas/get_userInfo_response'
    post:
      tags:
      - "userInfo"
      summary: "create user information"
      requestBody:
        $ref: '#/components/requestBodies/userBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_userInfo_response'
    put:
      tags:
      - "userInfo"
      summary: "update user information"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                user_info:
                  $ref: '#/components/schemas/userModel'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_userInfo_response'
  /policy:
    get:
      tags:
      - "policy"
      summary: "get manage policy"
      parameters:
      - name: period
        in: query
        description: 期間
        required: true
        schema:
          $ref: '#/components/schemas/period'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_policy_response'
    post:
      tags:
      - "policy"
      summary: "create manage policy"
      requestBody:
        $ref: '#/components/requestBodies/policyBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_policy_response'
    put:
      tags:
      - "policy"
      summary: "upcate manage policy"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/policyModel'
      responses:
        "200":
          $ref: '#/components/responses/OK'
  /departmentGoal:
    get:
      tags:
      - "departmentGoal"
      summary: "get depart goal"
      parameters:
      - name: period
        in: query
        description: 期間
        required: true
        schema:
          $ref: '#/components/schemas/period'
      - name: department
        in: query
        description: 部署
        required: true
        schema:
          $ref: '#/components/schemas/department'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_departmentGoal_response'
    post:
      tags: 
      - "departmentGoal"
      summary: "create department goal"
      requestBody:
        $ref: '#/components/requestBodies/departmentGoalBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/post_departmentGoal_response'
    put:
      tags:
      - "departmentGoal"
      summary: "update department goal"
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/departmentGoal'
      responses:
        "200":
          $ref: '#/components/responses/OK'


components:
  schemas:
    exec_date:
      description: 実行日付
      type: string
      minLength: 8
      maxLength: 8
      example: 20210501
    period:
      description: 期間
      type: string
      minLength: 6
      maxLength: 6
      example: 202105
    department:
      description: 部署
      type: string
      maxLength: 30
      example: ソリューション本部
    get_aimoInfo_response:
      description: aimoお知らせ取得のレスポンス
      type: object
      properties:
        status:
          type: string
          example: 1
        message:
          type: string
        result:
          type: array
          items:
            type: object
            properties:
              inform_id:
                type: integer
                example: 1
              inform_content:
                type: string
                example: 目標入力期間になりました
    get_userInfo_request:
      description: ユーザ情報取得のリクエスト
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        period:
          type: string
          example: 202105
    get_userInfo_response:
      description: ユーザ情報取得レスポンス
      type: object
      properties:
        userInfo:
          type: object
          properties:
            user_info:
              $ref: '#/components/schemas/user'
    post_userInfo_response:
      description: ユーザ情報作成レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        result:
          type: object
          properties:
            user_id:
              type: integer
              example: 1
    put_userInfo_response:
      description: ユーザ情報更新レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
    get_policy_response:
      description: 経営方針取得レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        result:
          type: object
          properties:
            policy:
              $ref: '#/components/schemas/policy'
    post_policy_requestBody:
      description: 経営方針作成リクエスト
      $ref: '#/components/schemas/policyModel'
    post_policy_response:
      description: 経営方針レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        result:
          $ref: '#/components/schemas/policyId'
    get_departmentGoal_response:
      description: 部署目標取得レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        result:
          type: object
          properties:
            department_goal:
              $ref: '#/components/schemas/departmentGoal'
    post_departmentGoal_response:
      description: 部署目標作成レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        resutl:
          $ref: '#/components/schemas/departmentGoalId'
            


    default_response:
      description: 基本レスポンス
      type: object
      properties:
        status:
          type: string
          example: 1
        message:
          type: string
    userId:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
    userModel:
      description: ユーザ情報
      type: object
      properties:
        last_name:
          type: string
          maxLength: 10
          example: kato
        first_name:
          type: string
          maxLength: 10
          example: jin
        period:
          type: string
          example: 202105
        department:
          type: string
          maxLength: 20
          example: ソリューション本部
        job:
          type: string
          maxLength: 20
          example: ジュニア
        enrollmentFlg:
          type: boolean
          example: true
        adminFlg:
          type: boolean
          example: false
    user:
      description: ユーザ
      allOf:
        - $ref: '#/components/schemas/userId'
        - $ref: '#/components/schemas/userModel'
    policyId:
      type: object
      properties:
        policy_id:
          type: integer
          example: 1
    policyModel:
      description: 経営方針
      type: object
      properties:
        period:
          $ref: '#/components/schemas/period'
        mid_term_policy:
          description: 中期経営方針
          type: string
          maxLength: 500
          example: "No.1 ICTソリューションプロバイダーを目指し、これからのソリューション業界のリーディングカンパニーになる¥n【2022年度末目標：売上高５０億円／営業利益５億"
        period_policy:
          description: 期別経営方針
          type: string
          maxLength: 500
          example: "全社増収収益（収益力向上）"
    policy:
      description: 経営方針
      allOf:
        - $ref: '#/components/schemas/policyId'
        - $ref: '#/components/schemas/policyModel'
    departmentGoalId:
      type: object
      properties:
        department_goal_id:
          type: integer
          example: 1
    departmentGoalModel:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/period'
        department:
          $ref: '#/components/schemas/department'
        department_goal:
          description: 部署目標
          type: string
          maxLength: 500
          example: 収益目標達成への貢献¥n事業強化への取り組み
    departmentGoal:
      allOf:
        - $ref: '#/components/schemas/departmentGoalId'
        - $ref: '#/components/schemas/departmentGoalModel'
  requestBodies:
    userBody:
      description: ユーザ作成リクエストボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userModel'
    policyBody:
      description: 経営方針作成リクエストボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/policyModel'
    departmentGoalBody:
      description: 部署目標作成リクエストボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/departmentGoalModel'
  responses:
    OK:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              response:
                $ref: '#/components/schemas/default_response'