openapi: '3.0.2'
info:
  title: aimo_openapi
  version: '1.0'
servers:
  - url: "localhost:8000" 
paths:
  /period:
    get:
      tags: 
      - "period"
      summary: "get annual period"
      responses:
        '200':
          description: OK          
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/schemas/default_response'
                  result:
                    type: object
                    properties:
                      period:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                          period:
                            type: string
                        example:
                          - id: 1
                            period: 202005 
                          - id: 2
                            period: 202011
                          - id: 3
                            period: 202105 
  /department:
    get:
      tags:
      - "department"
      summary: "get department list"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/schemas/default_response'
                  result:
                    type: object
                    properties:
                      department:
                        type: object
                        properties:
                          department_id:
                            type: integer
                          department:
                            type: string
                        example:
                          - id: 1
                            department: ソリューション本部
                          - id: 2
                            department: ソリューション本部 開発1部
                          - id: 3
                            department: ソリューション本部 開発2部
                          - id: 4
                            department: 札幌開発センター
                          - id: 5
                            department: エイジア開発事業本部
                          - id: 6
                            department: 営業本部
                          - id: 7
                            department: 事業推進本部
                          - id: 8
                            department: 管理本部
                          - id: 9
                            department: 情報システム部
                          - id: 10
                            department: モバイルライフジャパン
  /job:
    get:
      tags:
      - "job"
      summary: "get job list"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/schemas/default_response'
                  result:
                    type: object
                    properties:
                      job:
                        type: array
                        properties:
                          job_id:
                            type: integer
                          job:
                            type: string
                        example:
                          - id: 1
                            job: シニアSP
                          - id: 2
                            job: スペシャリスト
                          - id: 3
                            job: マネージャー
                          - id: 4
                            job: リーダー
                          - id: 5
                            job: サブリーダー
                          - id: 6
                            job: ジュニア


  /aimoInfo/{exec_date}:
    get:
      tags:
      - "aimoInfo"
      summary: "get aimo inform"
      parameters:
      - name: exec_date
        in: path
        description: 取得対象日付
        required: true
        schema:
          $ref: '#/components/schemas/exec_date'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_aimoInfo_response'
  /userInfo:
    get:
      tags:
      - "userInfo"
      summary: "get user information"
      parameters:
      - name: user_id
        in: query
        description: ユーザID
        required: true
        schema:
          $ref: '#/components/schemas/get_userInfo_request'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/schemas/default_response'
                  result:
                    $ref: '#/components/schemas/get_userInfo_response'
    post:
      tags:
      - "userInfo"
      summary: "create user information"
      requestBody:
        $ref: '#/components/requestBodies/userBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_userInfo_response'
    put:
      tags:
      - "userInfo"
      summary: "update user information"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_userInfo_response'
  /policy:
    get:
      tags:
      - "policy"
      summary: "get manage policy"
      parameters:
      - name: period
        in: query
        description: 期間
        required: true
        schema:
          $ref: '#/components/schemas/period'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_policy_response'
    post:
      tags:
      - "policy"
      summary: "create manage policy"
      requestBody:
        $ref: '#/components/requestBodies/policyBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_policy_response'
    put:
      tags:
      - "policy"
      summary: "upcate manage policy"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/policy'
      responses:
        "200":
          $ref: '#/components/responses/OK'
  /departmentGoal:
    get:
      tags:
      - "departmentGoal"
      summary: "get depart goal"
      parameters:
      - name: period
        in: query
        description: 期間
        required: true
        schema:
          $ref: '#/components/schemas/period'
      - name: department
        in: query
        description: 部署
        required: true
        schema:
          $ref: '#/components/schemas/department'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_departmentGoal_response'
    post:
      tags: 
      - "departmentGoal"
      summary: "create department goal"
      requestBody:
        $ref: '#/components/requestBodies/departmentGoalBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/post_departmentGoal_response'
    put:
      tags:
      - "departmentGoal"
      summary: "update department goal"
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/departmentGoal'
      responses:
        "200":
          $ref: '#/components/responses/OK'
  /roll:
    get:
      tags:
      - "roll"
      summary: "get parsonal roll"
      parameters:
        - name: period
          description: 期間
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/period'
        - name: department
          description: 部署
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/department'
        - name: job
          description: 職位
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/job'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/responses/OK'
                  roll:
                    $ref: '#/components/schemas/roll'
    post:
      tags: 
      - "roll"
      summary: "post parsonal roll"
      requestBody:
        $ref: '#/components/requestBodies/rollBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/responses/OK'
                  roll:
                    $ref: '#/components/schemas/rollId'
    put:
      tags:
      - "roll"
      summary: "put parsonal roll"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roll'
      responses:
        "200":
          $ref: '#/components/responses/OK'


components:
  schemas:
    exec_date:
      description: 実行日付
      type: string
      minLength: 8
      maxLength: 8
      example: 20210501
    period:
      description: 期間
      type: string
      minLength: 6
      maxLength: 6
      example: 202105
    department:
      description: 部署
      type: string
      maxLength: 30
      example: ソリューション本部 開発１部
    job:
      description: 職位
      type: string
      maxLength: 30
      example: ジュニア
    get_aimoInfo_response:
      description: 経営方針取得レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        result:
          type: object
          properties:
            aimoInfo:
              $ref: '#/components/schemas/aimoInfo'
    get_userInfo_request:
      description: ユーザ情報取得のリクエスト
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        period:
          type: string
          example: 202105
    get_userInfo_response:
      description: ユーザ情報取得レスポンス
      type: object
      properties:
        user_info:
          $ref: '#/components/schemas/user'
    post_userInfo_response:
      description: ユーザ情報作成レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        result:
          type: object
          properties:
            user_id:
              type: integer
              example: 1
    put_userInfo_response:
      description: ユーザ情報更新レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
    get_policy_response:
      description: 経営方針取得レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        result:
          type: object
          properties:
            policy:
              $ref: '#/components/schemas/policy'
    post_policy_requestBody:
      description: 経営方針作成リクエスト
      $ref: '#/components/schemas/policyModel'
    post_policy_response:
      description: 経営方針レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        result:
          $ref: '#/components/schemas/policyId'
    get_departmentGoal_response:
      description: 部署目標取得レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        result:
          type: object
          properties:
            department_goal:
              $ref: '#/components/schemas/departmentGoal'
    post_departmentGoal_response:
      description: 部署目標作成レスポンス
      type: object
      properties:
        response:
          $ref: '#/components/schemas/default_response'
        resutl:
          $ref: '#/components/schemas/departmentGoalId'
            


    default_response:
      description: 基本レスポンス
      type: object
      properties:
        status:
          type: string
          example: 1
        message:
          type: string
    aimoInfoId:
      type: object
      properties:
        aimo_info_id:
          type: integer
          example: 1
    aimoInfoModel:
      type: object
      properties:
        aimo_info_content:
          type: string
          example: 目標入力期間になりました
    aimoInfo:
      description: お知らせ
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/aimoInfoId'
          - $ref: '#/components/schemas/aimoInfoModel'
    
    userId:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
    userModel:
      description: ユーザ情報
      type: object
      properties:
        last_name:
          type: string
          maxLength: 10
          example: 加藤
        first_name:
          type: string
          maxLength: 10
          example: 仁 
        period:
          type: string
          example: 202105
        department:
          type: string
          maxLength: 20
          example: ソリューション本部 開発1部
        job:
          type: string
          maxLength: 20
          example: ジュニア
        enrollmentFlg:
          type: boolean
          example: true
        adminFlg:
          type: boolean
          example: false
    user:
      description: ユーザ
      allOf:
        - $ref: '#/components/schemas/userId'
        - $ref: '#/components/schemas/userModel'
    policyId:
      type: object
      properties:
        policy_id:
          type: integer
          example: 1
    policyModel:
      description: 経営方針
      type: object
      properties:
        period:
          $ref: '#/components/schemas/period'
        mid_term_policy:
          description: 中期経営方針
          type: string
          maxLength: 500
          example: "No.1 ICTソリューションプロバイダーを目指し、これからのソリューション業界のリーディングカンパニーになる¥n【2022年度末目標：売上高５０億円／営業利益５億"
        period_policy:
          description: 期別経営方針
          type: string
          maxLength: 500
          example: "全社増収収益（収益力向上）"
    policy:
      description: 経営方針
      allOf:
        - $ref: '#/components/schemas/policyId'
        - $ref: '#/components/schemas/policyModel'
    departmentGoalId:
      type: object
      properties:
        department_goal_id:
          type: integer
          example: 1
    departmentGoalModel:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/period'
        department:
          $ref: '#/components/schemas/department'
        department_goal:
          description: 部署目標
          type: string
          maxLength: 500
          example: 収益目標達成への貢献¥n事業強化への取り組み
    departmentGoal:
      allOf:
        - $ref: '#/components/schemas/departmentGoalId'
        - $ref: '#/components/schemas/departmentGoalModel'
    rollId:
      type: object
      properties:
        roll_id:
          type: integer
          example: 1
    rollModel:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/period'
        department:
          $ref: '#/components/schemas/department'
        job:
          $ref: '#/components/schemas/job'
        roll:
          description: 本人の役割
          type: string
          maxLength: 500
          example: 担当タスクにおける課題のキャッチアップと適切なエスカレーション¥nキャリアアップにつながる自己啓発
    roll:
      allOf:
        - $ref: '#/components/schemas/rollId'
        - $ref: '#/components/schemas/rollModel'
  requestBodies:
    userBody:
      description: ユーザ作成リクエストボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userModel'
    policyBody:
      description: 経営方針作成リクエストボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/policyModel'
    departmentGoalBody:
      description: 部署目標作成リクエストボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/departmentGoalModel'
    rollBody:
      description: 本人の役割作成リクエストボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rollModel'
  responses:
    OK:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              response:
                $ref: '#/components/schemas/default_response'