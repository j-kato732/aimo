// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: proto/aimo.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// aim応答定義
type GetAimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period string `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetAimRequest) Reset() {
	*x = GetAimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAimRequest) ProtoMessage() {}

func (x *GetAimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAimRequest.ProtoReflect.Descriptor instead.
func (*GetAimRequest) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{0}
}

func (x *GetAimRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *GetAimRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetAimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *GetAimResult    `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAimResponse) Reset() {
	*x = GetAimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAimResponse) ProtoMessage() {}

func (x *GetAimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAimResponse.ProtoReflect.Descriptor instead.
func (*GetAimResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{1}
}

func (x *GetAimResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetAimResponse) GetResult() *GetAimResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAimResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aim []*AimModel `protobuf:"bytes,1,rep,name=aim,proto3" json:"aim,omitempty"`
}

func (x *GetAimResult) Reset() {
	*x = GetAimResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAimResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAimResult) ProtoMessage() {}

func (x *GetAimResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAimResult.ProtoReflect.Descriptor instead.
func (*GetAimResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{2}
}

func (x *GetAimResult) GetAim() []*AimModel {
	if x != nil {
		return x.Aim
	}
	return nil
}

type PostAimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse               `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *PostAimResponse_PostAimResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PostAimResponse) Reset() {
	*x = PostAimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAimResponse) ProtoMessage() {}

func (x *PostAimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAimResponse.ProtoReflect.Descriptor instead.
func (*PostAimResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{3}
}

func (x *PostAimResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *PostAimResponse) GetResult() *PostAimResponse_PostAimResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type PutAimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PutAimResponse) Reset() {
	*x = PutAimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAimResponse) ProtoMessage() {}

func (x *PutAimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAimResponse.ProtoReflect.Descriptor instead.
func (*PutAimResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{4}
}

func (x *PutAimResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetAchievementMeansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse                                       `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *GetAchievementMeansResponse_GetAchievementMeansResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAchievementMeansResponse) Reset() {
	*x = GetAchievementMeansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAchievementMeansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAchievementMeansResponse) ProtoMessage() {}

func (x *GetAchievementMeansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAchievementMeansResponse.ProtoReflect.Descriptor instead.
func (*GetAchievementMeansResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{5}
}

func (x *GetAchievementMeansResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetAchievementMeansResponse) GetResult() *GetAchievementMeansResponse_GetAchievementMeansResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type PostAchievementMeansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementMeans []*AchievementMeanModel `protobuf:"bytes,1,rep,name=achievement_means,json=achievementMeans,proto3" json:"achievement_means,omitempty"`
}

func (x *PostAchievementMeansRequest) Reset() {
	*x = PostAchievementMeansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAchievementMeansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAchievementMeansRequest) ProtoMessage() {}

func (x *PostAchievementMeansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAchievementMeansRequest.ProtoReflect.Descriptor instead.
func (*PostAchievementMeansRequest) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{6}
}

func (x *PostAchievementMeansRequest) GetAchievementMeans() []*AchievementMeanModel {
	if x != nil {
		return x.AchievementMeans
	}
	return nil
}

type PostAchievementMeanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse                                        `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *PostAchievementMeanResponse_PostAchievementMeansResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PostAchievementMeanResponse) Reset() {
	*x = PostAchievementMeanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAchievementMeanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAchievementMeanResponse) ProtoMessage() {}

func (x *PostAchievementMeanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAchievementMeanResponse.ProtoReflect.Descriptor instead.
func (*PostAchievementMeanResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{7}
}

func (x *PostAchievementMeanResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *PostAchievementMeanResponse) GetResult() *PostAchievementMeanResponse_PostAchievementMeansResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type PostAchievementMeansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*PostAchievementMeanResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *PostAchievementMeansResponse) Reset() {
	*x = PostAchievementMeansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAchievementMeansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAchievementMeansResponse) ProtoMessage() {}

func (x *PostAchievementMeansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAchievementMeansResponse.ProtoReflect.Descriptor instead.
func (*PostAchievementMeansResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{8}
}

func (x *PostAchievementMeansResponse) GetResponses() []*PostAchievementMeanResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type PutAchievementMeansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementMeans []*AchievementMeanModel `protobuf:"bytes,1,rep,name=achievement_means,json=achievementMeans,proto3" json:"achievement_means,omitempty"`
}

func (x *PutAchievementMeansRequest) Reset() {
	*x = PutAchievementMeansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAchievementMeansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAchievementMeansRequest) ProtoMessage() {}

func (x *PutAchievementMeansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAchievementMeansRequest.ProtoReflect.Descriptor instead.
func (*PutAchievementMeansRequest) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{9}
}

func (x *PutAchievementMeansRequest) GetAchievementMeans() []*AchievementMeanModel {
	if x != nil {
		return x.AchievementMeans
	}
	return nil
}

type PutAchievementMeansResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*PutAchievementMeansResponses_PutAchievementMeanResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *PutAchievementMeansResponses) Reset() {
	*x = PutAchievementMeansResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAchievementMeansResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAchievementMeansResponses) ProtoMessage() {}

func (x *PutAchievementMeansResponses) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAchievementMeansResponses.ProtoReflect.Descriptor instead.
func (*PutAchievementMeansResponses) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{10}
}

func (x *PutAchievementMeansResponses) GetResponses() []*PutAchievementMeansResponses_PutAchievementMeanResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type GetAchievementMeanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period                string `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	UserId                int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AimNumber             int64  `protobuf:"varint,3,opt,name=aimNumber,proto3" json:"aimNumber,omitempty"`
	AchievementMeanNumber int64  `protobuf:"varint,4,opt,name=achievementMeanNumber,proto3" json:"achievementMeanNumber,omitempty"`
}

func (x *GetAchievementMeanRequest) Reset() {
	*x = GetAchievementMeanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAchievementMeanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAchievementMeanRequest) ProtoMessage() {}

func (x *GetAchievementMeanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAchievementMeanRequest.ProtoReflect.Descriptor instead.
func (*GetAchievementMeanRequest) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{11}
}

func (x *GetAchievementMeanRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *GetAchievementMeanRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetAchievementMeanRequest) GetAimNumber() int64 {
	if x != nil {
		return x.AimNumber
	}
	return 0
}

func (x *GetAchievementMeanRequest) GetAchievementMeanNumber() int64 {
	if x != nil {
		return x.AchievementMeanNumber
	}
	return 0
}

type GetAchievementMeanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse                                     `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *GetAchievementMeanResponse_GetAchievementMeanResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAchievementMeanResponse) Reset() {
	*x = GetAchievementMeanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAchievementMeanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAchievementMeanResponse) ProtoMessage() {}

func (x *GetAchievementMeanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAchievementMeanResponse.ProtoReflect.Descriptor instead.
func (*GetAchievementMeanResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{12}
}

func (x *GetAchievementMeanResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetAchievementMeanResponse) GetResult() *GetAchievementMeanResponse_GetAchievementMeanResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// personalEva
type GetPersonalEvaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse                             `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *GetPersonalEvaResponse_GetPersonalEvaResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetPersonalEvaResponse) Reset() {
	*x = GetPersonalEvaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalEvaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalEvaResponse) ProtoMessage() {}

func (x *GetPersonalEvaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalEvaResponse.ProtoReflect.Descriptor instead.
func (*GetPersonalEvaResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{13}
}

func (x *GetPersonalEvaResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetPersonalEvaResponse) GetResult() *GetPersonalEvaResponse_GetPersonalEvaResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// evaluationBefore getレスポンス定義
type GetEvaluationBeforeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse                                       `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *GetEvaluationBeforeResponse_GetEvaluationBeforeResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetEvaluationBeforeResponse) Reset() {
	*x = GetEvaluationBeforeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEvaluationBeforeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEvaluationBeforeResponse) ProtoMessage() {}

func (x *GetEvaluationBeforeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEvaluationBeforeResponse.ProtoReflect.Descriptor instead.
func (*GetEvaluationBeforeResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{14}
}

func (x *GetEvaluationBeforeResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetEvaluationBeforeResponse) GetResult() *GetEvaluationBeforeResponse_GetEvaluationBeforeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// evaluation GETレスポンス定義
type GetEvaluationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse                           `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *GetEvaluationResponse_GetEvaluationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetEvaluationResponse) Reset() {
	*x = GetEvaluationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEvaluationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEvaluationResponse) ProtoMessage() {}

func (x *GetEvaluationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEvaluationResponse.ProtoReflect.Descriptor instead.
func (*GetEvaluationResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{15}
}

func (x *GetEvaluationResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetEvaluationResponse) GetResult() *GetEvaluationResponse_GetEvaluationResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// comprehensiveComment　GETレスポンス定義
type GetComprehensiveCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse                                                `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *GetComprehensiveCommentResponse_GetComprehenesiveCommentResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetComprehensiveCommentResponse) Reset() {
	*x = GetComprehensiveCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComprehensiveCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComprehensiveCommentResponse) ProtoMessage() {}

func (x *GetComprehensiveCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComprehensiveCommentResponse.ProtoReflect.Descriptor instead.
func (*GetComprehensiveCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{16}
}

func (x *GetComprehensiveCommentResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetComprehensiveCommentResponse) GetResult() *GetComprehensiveCommentResponse_GetComprehenesiveCommentResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 共通応答定義
type PostDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse                `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *PostDefaultResponse_PostResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PostDefaultResponse) Reset() {
	*x = PostDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDefaultResponse) ProtoMessage() {}

func (x *PostDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDefaultResponse.ProtoReflect.Descriptor instead.
func (*PostDefaultResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{17}
}

func (x *PostDefaultResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *PostDefaultResponse) GetResult() *PostDefaultResponse_PostResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type PutDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PutDefaultResponse) Reset() {
	*x = PutDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDefaultResponse) ProtoMessage() {}

func (x *PutDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDefaultResponse.ProtoReflect.Descriptor instead.
func (*PutDefaultResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{18}
}

func (x *PutDefaultResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DefaultResponse) Reset() {
	*x = DefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultResponse) ProtoMessage() {}

func (x *DefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultResponse.ProtoReflect.Descriptor instead.
func (*DefaultResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{19}
}

func (x *DefaultResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DefaultResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AimModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                          int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Period                      string               `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
	UserId                      int64                `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AimItem                     string               `protobuf:"bytes,4,opt,name=aim_item,json=aimItem,proto3" json:"aim_item,omitempty"`
	AchievementLevel            string               `protobuf:"bytes,5,opt,name=achievement_level,json=achievementLevel,proto3" json:"achievement_level,omitempty"`
	AchievementWeight           int64                `protobuf:"varint,7,opt,name=achievement_weight,json=achievementWeight,proto3" json:"achievement_weight,omitempty"`
	AchievementDifficultyBefore int64                `protobuf:"varint,8,opt,name=achievement_difficulty_before,json=achievementDifficultyBefore,proto3" json:"achievement_difficulty_before,omitempty"`
	AimNumber                   int64                `protobuf:"varint,9,opt,name=aim_number,json=aimNumber,proto3" json:"aim_number,omitempty"`
	CreatedAt                   *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                   *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AimModel) Reset() {
	*x = AimModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AimModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AimModel) ProtoMessage() {}

func (x *AimModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AimModel.ProtoReflect.Descriptor instead.
func (*AimModel) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{20}
}

func (x *AimModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AimModel) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *AimModel) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AimModel) GetAimItem() string {
	if x != nil {
		return x.AimItem
	}
	return ""
}

func (x *AimModel) GetAchievementLevel() string {
	if x != nil {
		return x.AchievementLevel
	}
	return ""
}

func (x *AimModel) GetAchievementWeight() int64 {
	if x != nil {
		return x.AchievementWeight
	}
	return 0
}

func (x *AimModel) GetAchievementDifficultyBefore() int64 {
	if x != nil {
		return x.AchievementDifficultyBefore
	}
	return 0
}

func (x *AimModel) GetAimNumber() int64 {
	if x != nil {
		return x.AimNumber
	}
	return 0
}

func (x *AimModel) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AimModel) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AchievementMeanModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Period                string               `protobuf:"bytes,12,opt,name=period,proto3" json:"period,omitempty"`
	UserId                int64                `protobuf:"varint,13,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AimNumber             int64                `protobuf:"varint,14,opt,name=aim_number,json=aimNumber,proto3" json:"aim_number,omitempty"`
	AchievementMean       string               `protobuf:"bytes,2,opt,name=achievement_mean,json=achievementMean,proto3" json:"achievement_mean,omitempty"`
	FirstMonth            bool                 `protobuf:"varint,3,opt,name=first_month,json=firstMonth,proto3" json:"first_month,omitempty"`
	SecondMonth           bool                 `protobuf:"varint,4,opt,name=second_month,json=secondMonth,proto3" json:"second_month,omitempty"`
	ThirdMonth            bool                 `protobuf:"varint,5,opt,name=third_month,json=thirdMonth,proto3" json:"third_month,omitempty"`
	FourthMonth           bool                 `protobuf:"varint,6,opt,name=fourth_month,json=fourthMonth,proto3" json:"fourth_month,omitempty"`
	FifthMonth            bool                 `protobuf:"varint,7,opt,name=fifth_month,json=fifthMonth,proto3" json:"fifth_month,omitempty"`
	SixthMonth            bool                 `protobuf:"varint,8,opt,name=sixth_month,json=sixthMonth,proto3" json:"sixth_month,omitempty"`
	AchievementMeanNumber int64                `protobuf:"varint,9,opt,name=achievement_mean_number,json=achievementMeanNumber,proto3" json:"achievement_mean_number,omitempty"`
	CreatedAt             *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AchievementMeanModel) Reset() {
	*x = AchievementMeanModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementMeanModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementMeanModel) ProtoMessage() {}

func (x *AchievementMeanModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementMeanModel.ProtoReflect.Descriptor instead.
func (*AchievementMeanModel) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{21}
}

func (x *AchievementMeanModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AchievementMeanModel) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *AchievementMeanModel) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AchievementMeanModel) GetAimNumber() int64 {
	if x != nil {
		return x.AimNumber
	}
	return 0
}

func (x *AchievementMeanModel) GetAchievementMean() string {
	if x != nil {
		return x.AchievementMean
	}
	return ""
}

func (x *AchievementMeanModel) GetFirstMonth() bool {
	if x != nil {
		return x.FirstMonth
	}
	return false
}

func (x *AchievementMeanModel) GetSecondMonth() bool {
	if x != nil {
		return x.SecondMonth
	}
	return false
}

func (x *AchievementMeanModel) GetThirdMonth() bool {
	if x != nil {
		return x.ThirdMonth
	}
	return false
}

func (x *AchievementMeanModel) GetFourthMonth() bool {
	if x != nil {
		return x.FourthMonth
	}
	return false
}

func (x *AchievementMeanModel) GetFifthMonth() bool {
	if x != nil {
		return x.FifthMonth
	}
	return false
}

func (x *AchievementMeanModel) GetSixthMonth() bool {
	if x != nil {
		return x.SixthMonth
	}
	return false
}

func (x *AchievementMeanModel) GetAchievementMeanNumber() int64 {
	if x != nil {
		return x.AchievementMeanNumber
	}
	return 0
}

func (x *AchievementMeanModel) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AchievementMeanModel) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PersonalEvaModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AimId                 int64  `protobuf:"varint,5,opt,name=aimId,proto3" json:"aimId,omitempty"`
	PersonalEvaluation    string `protobuf:"bytes,2,opt,name=personalEvaluation,proto3" json:"personalEvaluation,omitempty"`
	AchievementRate       int64  `protobuf:"varint,3,opt,name=achievementRate,proto3" json:"achievementRate,omitempty"`
	AchievementDifficulty int64  `protobuf:"varint,4,opt,name=achievementDifficulty,proto3" json:"achievementDifficulty,omitempty"`
}

func (x *PersonalEvaModel) Reset() {
	*x = PersonalEvaModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonalEvaModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalEvaModel) ProtoMessage() {}

func (x *PersonalEvaModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalEvaModel.ProtoReflect.Descriptor instead.
func (*PersonalEvaModel) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{22}
}

func (x *PersonalEvaModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PersonalEvaModel) GetAimId() int64 {
	if x != nil {
		return x.AimId
	}
	return 0
}

func (x *PersonalEvaModel) GetPersonalEvaluation() string {
	if x != nil {
		return x.PersonalEvaluation
	}
	return ""
}

func (x *PersonalEvaModel) GetAchievementRate() int64 {
	if x != nil {
		return x.AchievementRate
	}
	return 0
}

func (x *PersonalEvaModel) GetAchievementDifficulty() int64 {
	if x != nil {
		return x.AchievementDifficulty
	}
	return 0
}

type EvaluationBeforeModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AimId           int64  `protobuf:"varint,2,opt,name=aimId,proto3" json:"aimId,omitempty"`
	Comment         string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	EvaluatorNumber int64  `protobuf:"varint,4,opt,name=evaluatorNumber,proto3" json:"evaluatorNumber,omitempty"`
	CommentUserId   int64  `protobuf:"varint,5,opt,name=commentUserId,proto3" json:"commentUserId,omitempty"`
}

func (x *EvaluationBeforeModel) Reset() {
	*x = EvaluationBeforeModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationBeforeModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationBeforeModel) ProtoMessage() {}

func (x *EvaluationBeforeModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationBeforeModel.ProtoReflect.Descriptor instead.
func (*EvaluationBeforeModel) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{23}
}

func (x *EvaluationBeforeModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EvaluationBeforeModel) GetAimId() int64 {
	if x != nil {
		return x.AimId
	}
	return 0
}

func (x *EvaluationBeforeModel) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *EvaluationBeforeModel) GetEvaluatorNumber() int64 {
	if x != nil {
		return x.EvaluatorNumber
	}
	return 0
}

func (x *EvaluationBeforeModel) GetCommentUserId() int64 {
	if x != nil {
		return x.CommentUserId
	}
	return 0
}

type EvaluationModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AimId                 int64  `protobuf:"varint,2,opt,name=aimId,proto3" json:"aimId,omitempty"`
	Comment               string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	AchievementRate       int64  `protobuf:"varint,4,opt,name=achievementRate,proto3" json:"achievementRate,omitempty"`
	AchievementDifficulty int64  `protobuf:"varint,5,opt,name=achievementDifficulty,proto3" json:"achievementDifficulty,omitempty"`
	EvaluatorNumber       int64  `protobuf:"varint,6,opt,name=evaluatorNumber,proto3" json:"evaluatorNumber,omitempty"`
	EvaluatorUserId       int64  `protobuf:"varint,7,opt,name=evaluatorUserId,proto3" json:"evaluatorUserId,omitempty"`
}

func (x *EvaluationModel) Reset() {
	*x = EvaluationModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationModel) ProtoMessage() {}

func (x *EvaluationModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationModel.ProtoReflect.Descriptor instead.
func (*EvaluationModel) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{24}
}

func (x *EvaluationModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EvaluationModel) GetAimId() int64 {
	if x != nil {
		return x.AimId
	}
	return 0
}

func (x *EvaluationModel) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *EvaluationModel) GetAchievementRate() int64 {
	if x != nil {
		return x.AchievementRate
	}
	return 0
}

func (x *EvaluationModel) GetAchievementDifficulty() int64 {
	if x != nil {
		return x.AchievementDifficulty
	}
	return 0
}

func (x *EvaluationModel) GetEvaluatorNumber() int64 {
	if x != nil {
		return x.EvaluatorNumber
	}
	return 0
}

func (x *EvaluationModel) GetEvaluatorUserId() int64 {
	if x != nil {
		return x.EvaluatorUserId
	}
	return 0
}

type ComprehensiveCommentModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Period               string `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	ConprehensiveComment string `protobuf:"bytes,4,opt,name=conprehensiveComment,proto3" json:"conprehensiveComment,omitempty"`
	CommentUserId        int64  `protobuf:"varint,5,opt,name=commentUserId,proto3" json:"commentUserId,omitempty"`
}

func (x *ComprehensiveCommentModel) Reset() {
	*x = ComprehensiveCommentModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComprehensiveCommentModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComprehensiveCommentModel) ProtoMessage() {}

func (x *ComprehensiveCommentModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComprehensiveCommentModel.ProtoReflect.Descriptor instead.
func (*ComprehensiveCommentModel) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{25}
}

func (x *ComprehensiveCommentModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ComprehensiveCommentModel) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ComprehensiveCommentModel) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *ComprehensiveCommentModel) GetConprehensiveComment() string {
	if x != nil {
		return x.ConprehensiveComment
	}
	return ""
}

func (x *ComprehensiveCommentModel) GetCommentUserId() int64 {
	if x != nil {
		return x.CommentUserId
	}
	return 0
}

type PostAimResponse_PostAimResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostAimResponse_PostAimResult) Reset() {
	*x = PostAimResponse_PostAimResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAimResponse_PostAimResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAimResponse_PostAimResult) ProtoMessage() {}

func (x *PostAimResponse_PostAimResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAimResponse_PostAimResult.ProtoReflect.Descriptor instead.
func (*PostAimResponse_PostAimResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PostAimResponse_PostAimResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAchievementMeansResponse_GetAchievementMeansResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementMeans []*AchievementMeanModel `protobuf:"bytes,1,rep,name=achievement_means,json=achievementMeans,proto3" json:"achievement_means,omitempty"`
}

func (x *GetAchievementMeansResponse_GetAchievementMeansResult) Reset() {
	*x = GetAchievementMeansResponse_GetAchievementMeansResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAchievementMeansResponse_GetAchievementMeansResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAchievementMeansResponse_GetAchievementMeansResult) ProtoMessage() {}

func (x *GetAchievementMeansResponse_GetAchievementMeansResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAchievementMeansResponse_GetAchievementMeansResult.ProtoReflect.Descriptor instead.
func (*GetAchievementMeansResponse_GetAchievementMeansResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetAchievementMeansResponse_GetAchievementMeansResult) GetAchievementMeans() []*AchievementMeanModel {
	if x != nil {
		return x.AchievementMeans
	}
	return nil
}

type PostAchievementMeanResponse_PostAchievementMeansResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostAchievementMeanResponse_PostAchievementMeansResult) Reset() {
	*x = PostAchievementMeanResponse_PostAchievementMeansResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAchievementMeanResponse_PostAchievementMeansResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAchievementMeanResponse_PostAchievementMeansResult) ProtoMessage() {}

func (x *PostAchievementMeanResponse_PostAchievementMeansResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAchievementMeanResponse_PostAchievementMeansResult.ProtoReflect.Descriptor instead.
func (*PostAchievementMeanResponse_PostAchievementMeansResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{7, 0}
}

func (x *PostAchievementMeanResponse_PostAchievementMeansResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PutAchievementMeansResponses_PutAchievementMeanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DefaultResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PutAchievementMeansResponses_PutAchievementMeanResponse) Reset() {
	*x = PutAchievementMeansResponses_PutAchievementMeanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAchievementMeansResponses_PutAchievementMeanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAchievementMeansResponses_PutAchievementMeanResponse) ProtoMessage() {}

func (x *PutAchievementMeansResponses_PutAchievementMeanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAchievementMeansResponses_PutAchievementMeanResponse.ProtoReflect.Descriptor instead.
func (*PutAchievementMeansResponses_PutAchievementMeanResponse) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{10, 0}
}

func (x *PutAchievementMeansResponses_PutAchievementMeanResponse) GetResponse() *DefaultResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetAchievementMeanResponse_GetAchievementMeanResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementMean *AchievementMeanModel `protobuf:"bytes,1,opt,name=achievementMean,proto3" json:"achievementMean,omitempty"`
}

func (x *GetAchievementMeanResponse_GetAchievementMeanResult) Reset() {
	*x = GetAchievementMeanResponse_GetAchievementMeanResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAchievementMeanResponse_GetAchievementMeanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAchievementMeanResponse_GetAchievementMeanResult) ProtoMessage() {}

func (x *GetAchievementMeanResponse_GetAchievementMeanResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAchievementMeanResponse_GetAchievementMeanResult.ProtoReflect.Descriptor instead.
func (*GetAchievementMeanResponse_GetAchievementMeanResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetAchievementMeanResponse_GetAchievementMeanResult) GetAchievementMean() *AchievementMeanModel {
	if x != nil {
		return x.AchievementMean
	}
	return nil
}

type GetPersonalEvaResponse_GetPersonalEvaResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalEva *PersonalEvaModel `protobuf:"bytes,1,opt,name=personalEva,proto3" json:"personalEva,omitempty"`
}

func (x *GetPersonalEvaResponse_GetPersonalEvaResult) Reset() {
	*x = GetPersonalEvaResponse_GetPersonalEvaResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalEvaResponse_GetPersonalEvaResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalEvaResponse_GetPersonalEvaResult) ProtoMessage() {}

func (x *GetPersonalEvaResponse_GetPersonalEvaResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalEvaResponse_GetPersonalEvaResult.ProtoReflect.Descriptor instead.
func (*GetPersonalEvaResponse_GetPersonalEvaResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetPersonalEvaResponse_GetPersonalEvaResult) GetPersonalEva() *PersonalEvaModel {
	if x != nil {
		return x.PersonalEva
	}
	return nil
}

type GetEvaluationBeforeResponse_GetEvaluationBeforeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvaluationBefore *EvaluationBeforeModel `protobuf:"bytes,1,opt,name=evaluationBefore,proto3" json:"evaluationBefore,omitempty"`
}

func (x *GetEvaluationBeforeResponse_GetEvaluationBeforeResult) Reset() {
	*x = GetEvaluationBeforeResponse_GetEvaluationBeforeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEvaluationBeforeResponse_GetEvaluationBeforeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEvaluationBeforeResponse_GetEvaluationBeforeResult) ProtoMessage() {}

func (x *GetEvaluationBeforeResponse_GetEvaluationBeforeResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEvaluationBeforeResponse_GetEvaluationBeforeResult.ProtoReflect.Descriptor instead.
func (*GetEvaluationBeforeResponse_GetEvaluationBeforeResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetEvaluationBeforeResponse_GetEvaluationBeforeResult) GetEvaluationBefore() *EvaluationBeforeModel {
	if x != nil {
		return x.EvaluationBefore
	}
	return nil
}

type GetEvaluationResponse_GetEvaluationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evaluation *EvaluationModel `protobuf:"bytes,1,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
}

func (x *GetEvaluationResponse_GetEvaluationResult) Reset() {
	*x = GetEvaluationResponse_GetEvaluationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEvaluationResponse_GetEvaluationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEvaluationResponse_GetEvaluationResult) ProtoMessage() {}

func (x *GetEvaluationResponse_GetEvaluationResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEvaluationResponse_GetEvaluationResult.ProtoReflect.Descriptor instead.
func (*GetEvaluationResponse_GetEvaluationResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetEvaluationResponse_GetEvaluationResult) GetEvaluation() *EvaluationModel {
	if x != nil {
		return x.Evaluation
	}
	return nil
}

type GetComprehensiveCommentResponse_GetComprehenesiveCommentResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComprehensiveComment *ComprehensiveCommentModel `protobuf:"bytes,1,opt,name=comprehensiveComment,proto3" json:"comprehensiveComment,omitempty"`
}

func (x *GetComprehensiveCommentResponse_GetComprehenesiveCommentResult) Reset() {
	*x = GetComprehensiveCommentResponse_GetComprehenesiveCommentResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComprehensiveCommentResponse_GetComprehenesiveCommentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComprehensiveCommentResponse_GetComprehenesiveCommentResult) ProtoMessage() {}

func (x *GetComprehensiveCommentResponse_GetComprehenesiveCommentResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComprehensiveCommentResponse_GetComprehenesiveCommentResult.ProtoReflect.Descriptor instead.
func (*GetComprehensiveCommentResponse_GetComprehenesiveCommentResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetComprehensiveCommentResponse_GetComprehenesiveCommentResult) GetComprehensiveComment() *ComprehensiveCommentModel {
	if x != nil {
		return x.ComprehensiveComment
	}
	return nil
}

type PostDefaultResponse_PostResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostDefaultResponse_PostResult) Reset() {
	*x = PostDefaultResponse_PostResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aimo_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDefaultResponse_PostResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDefaultResponse_PostResult) ProtoMessage() {}

func (x *PostDefaultResponse_PostResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aimo_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDefaultResponse_PostResult.ProtoReflect.Descriptor instead.
func (*PostDefaultResponse_PostResult) Descriptor() ([]byte, []int) {
	return file_proto_aimo_proto_rawDescGZIP(), []int{17, 0}
}

func (x *PostDefaultResponse_PostResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_proto_aimo_proto protoreflect.FileDescriptor

var file_proto_aimo_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x61, 0x69, 0x6d, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x30, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x69, 0x6d, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x61, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x41, 0x69, 0x6d, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x03, 0x61, 0x69, 0x6d, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74,
	0x41, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x1f, 0x0a, 0x0d, 0x50,
	0x6f, 0x73, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x0e,
	0x50, 0x75, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x8b, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x10, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x22,
	0x66, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47,
	0x0a, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x69, 0x6d,
	0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x1a, 0x2c, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5f,
	0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22,
	0x65, 0x0a, 0x1a, 0x50, 0x75, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a,
	0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x61,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x1c, 0x50, 0x75, 0x74, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x69, 0x6d,
	0x6f, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x50,
	0x75, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x1a, 0x4f, 0x0a, 0x1a, 0x50, 0x75, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x69, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x69, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x61, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x84, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x60, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x61, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0f, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x22, 0xe8,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69,
	0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61,
	0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45,
	0x76, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x50, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x38, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x22, 0x8b, 0x02, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69,
	0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61,
	0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x1a, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x47,
	0x0a, 0x10, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x10, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x4c, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa9, 0x02, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x1a, 0x75, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e,
	0x65, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x53, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65,
	0x6e, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x1a, 0x1c, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47,
	0x0a, 0x12, 0x50, 0x75, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa3, 0x03, 0x0a,
	0x08, 0x41, 0x69, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x69,
	0x6d, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x69,
	0x6d, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x42, 0x0a, 0x1d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x69, 0x6d, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02,
	0x08, 0x01, 0x22, 0xa6, 0x04, 0x0a, 0x14, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x69, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6d, 0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x66, 0x74, 0x68, 0x5f, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x69, 0x66, 0x74, 0x68, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x78, 0x74, 0x68, 0x5f, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x69, 0x78, 0x74, 0x68,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0xd0, 0x01, 0x0a, 0x10,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x34, 0x0a, 0x15, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0xaf,
	0x01, 0x0a, 0x15, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x69, 0x6d, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01,
	0x22, 0x8d, 0x02, 0x0a, 0x0f, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x15, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x66,
	0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x0f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01,
	0x22, 0xbd, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x32,
	0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f,
	0x6e, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01,
	0x32, 0xf0, 0x10, 0x0a, 0x04, 0x61, 0x69, 0x6d, 0x6f, 0x12, 0x41, 0x0a, 0x06, 0x67, 0x65, 0x74,
	0x41, 0x69, 0x6d, 0x12, 0x13, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x69,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x06, 0x12, 0x04, 0x2f, 0x61, 0x69, 0x6d, 0x12, 0x41, 0x0a, 0x07,
	0x70, 0x6f, 0x73, 0x74, 0x41, 0x69, 0x6d, 0x12, 0x0e, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x41,
	0x69, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x22, 0x04, 0x2f, 0x61, 0x69, 0x6d, 0x3a, 0x01, 0x2a, 0x12,
	0x3f, 0x0a, 0x06, 0x70, 0x75, 0x74, 0x41, 0x69, 0x6d, 0x12, 0x0e, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x41, 0x69, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x14, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x50, 0x75, 0x74, 0x41, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x1a, 0x04, 0x2f, 0x61, 0x69, 0x6d, 0x3a, 0x01, 0x2a,
	0x12, 0x6f, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x1a, 0x21, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11,
	0x2f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e,
	0x73, 0x12, 0x7b, 0x0a, 0x14, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61,
	0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x79,
	0x0a, 0x13, 0x70, 0x75, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x61, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x75, 0x74,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50,
	0x75, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x12, 0x67, 0x65, 0x74,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x12,
	0x1f, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x12, 0x71, 0x0a, 0x13,
	0x70, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x61, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a,
	0x21, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x3a, 0x01, 0x2a, 0x12,
	0x67, 0x0a, 0x12, 0x70, 0x75, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x61, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x1a, 0x18, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x1a, 0x10, 0x2f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x61, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x5c, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x12, 0x16, 0x2e, 0x61, 0x69, 0x6d,
	0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x1a, 0x1c, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x12, 0x5d, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x12, 0x16, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x1a, 0x19, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45,
	0x76, 0x61, 0x3a, 0x01, 0x2a, 0x12, 0x5b, 0x0a, 0x0e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x12, 0x16, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a,
	0x18, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x1a, 0x0c, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x3a,
	0x01, 0x2a, 0x12, 0x70, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x21, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x12, 0x11, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x12, 0x6c, 0x0a, 0x14, 0x70, 0x6f, 0x73, 0x74, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x2e, 0x61,
	0x69, 0x6d, 0x6f, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x19, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x13, 0x70, 0x75, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x69, 0x6d, 0x6f,
	0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x18, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x75,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x58,
	0x0a, 0x0d, 0x67, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x1b, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x74,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x61, 0x69, 0x6d,
	0x6f, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x1a, 0x19, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x58, 0x0a, 0x0d, 0x70, 0x75, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x18, 0x2e, 0x61,
	0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x1a, 0x0b,
	0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x80,
	0x01, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x69, 0x6d,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x25, 0x2e, 0x61, 0x69,
	0x6d, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x78, 0x0a, 0x18, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68,
	0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e,
	0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x19,
	0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x22, 0x15, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x17, 0x70,
	0x75, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x18, 0x2e, 0x61, 0x69, 0x6d, 0x6f, 0x2e, 0x50,
	0x75, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x1a, 0x15, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x3a, 0x01, 0x2a, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6a, 0x2d, 0x6b, 0x61, 0x74, 0x6f, 0x37, 0x33, 0x32, 0x2f, 0x61, 0x69, 0x6d, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_aimo_proto_rawDescOnce sync.Once
	file_proto_aimo_proto_rawDescData = file_proto_aimo_proto_rawDesc
)

func file_proto_aimo_proto_rawDescGZIP() []byte {
	file_proto_aimo_proto_rawDescOnce.Do(func() {
		file_proto_aimo_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_aimo_proto_rawDescData)
	})
	return file_proto_aimo_proto_rawDescData
}

var file_proto_aimo_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_proto_aimo_proto_goTypes = []interface{}{
	(*GetAimRequest)(nil),                                                  // 0: aimo.GetAimRequest
	(*GetAimResponse)(nil),                                                 // 1: aimo.GetAimResponse
	(*GetAimResult)(nil),                                                   // 2: aimo.GetAimResult
	(*PostAimResponse)(nil),                                                // 3: aimo.PostAimResponse
	(*PutAimResponse)(nil),                                                 // 4: aimo.PutAimResponse
	(*GetAchievementMeansResponse)(nil),                                    // 5: aimo.GetAchievementMeansResponse
	(*PostAchievementMeansRequest)(nil),                                    // 6: aimo.PostAchievementMeansRequest
	(*PostAchievementMeanResponse)(nil),                                    // 7: aimo.PostAchievementMeanResponse
	(*PostAchievementMeansResponse)(nil),                                   // 8: aimo.PostAchievementMeansResponse
	(*PutAchievementMeansRequest)(nil),                                     // 9: aimo.PutAchievementMeansRequest
	(*PutAchievementMeansResponses)(nil),                                   // 10: aimo.PutAchievementMeansResponses
	(*GetAchievementMeanRequest)(nil),                                      // 11: aimo.GetAchievementMeanRequest
	(*GetAchievementMeanResponse)(nil),                                     // 12: aimo.GetAchievementMeanResponse
	(*GetPersonalEvaResponse)(nil),                                         // 13: aimo.GetPersonalEvaResponse
	(*GetEvaluationBeforeResponse)(nil),                                    // 14: aimo.GetEvaluationBeforeResponse
	(*GetEvaluationResponse)(nil),                                          // 15: aimo.GetEvaluationResponse
	(*GetComprehensiveCommentResponse)(nil),                                // 16: aimo.GetComprehensiveCommentResponse
	(*PostDefaultResponse)(nil),                                            // 17: aimo.PostDefaultResponse
	(*PutDefaultResponse)(nil),                                             // 18: aimo.PutDefaultResponse
	(*DefaultResponse)(nil),                                                // 19: aimo.DefaultResponse
	(*AimModel)(nil),                                                       // 20: aimo.AimModel
	(*AchievementMeanModel)(nil),                                           // 21: aimo.AchievementMeanModel
	(*PersonalEvaModel)(nil),                                               // 22: aimo.PersonalEvaModel
	(*EvaluationBeforeModel)(nil),                                          // 23: aimo.EvaluationBeforeModel
	(*EvaluationModel)(nil),                                                // 24: aimo.EvaluationModel
	(*ComprehensiveCommentModel)(nil),                                      // 25: aimo.ComprehensiveCommentModel
	(*PostAimResponse_PostAimResult)(nil),                                  // 26: aimo.PostAimResponse.PostAimResult
	(*GetAchievementMeansResponse_GetAchievementMeansResult)(nil),          // 27: aimo.GetAchievementMeansResponse.GetAchievementMeansResult
	(*PostAchievementMeanResponse_PostAchievementMeansResult)(nil),         // 28: aimo.PostAchievementMeanResponse.PostAchievementMeansResult
	(*PutAchievementMeansResponses_PutAchievementMeanResponse)(nil),        // 29: aimo.PutAchievementMeansResponses.PutAchievementMeanResponse
	(*GetAchievementMeanResponse_GetAchievementMeanResult)(nil),            // 30: aimo.GetAchievementMeanResponse.GetAchievementMeanResult
	(*GetPersonalEvaResponse_GetPersonalEvaResult)(nil),                    // 31: aimo.GetPersonalEvaResponse.GetPersonalEvaResult
	(*GetEvaluationBeforeResponse_GetEvaluationBeforeResult)(nil),          // 32: aimo.GetEvaluationBeforeResponse.GetEvaluationBeforeResult
	(*GetEvaluationResponse_GetEvaluationResult)(nil),                      // 33: aimo.GetEvaluationResponse.GetEvaluationResult
	(*GetComprehensiveCommentResponse_GetComprehenesiveCommentResult)(nil), // 34: aimo.GetComprehensiveCommentResponse.GetComprehenesiveCommentResult
	(*PostDefaultResponse_PostResult)(nil),                                 // 35: aimo.PostDefaultResponse.PostResult
	(*timestamp.Timestamp)(nil),                                            // 36: google.protobuf.Timestamp
}
var file_proto_aimo_proto_depIdxs = []int32{
	19, // 0: aimo.GetAimResponse.response:type_name -> aimo.DefaultResponse
	2,  // 1: aimo.GetAimResponse.result:type_name -> aimo.GetAimResult
	20, // 2: aimo.GetAimResult.aim:type_name -> aimo.AimModel
	19, // 3: aimo.PostAimResponse.response:type_name -> aimo.DefaultResponse
	26, // 4: aimo.PostAimResponse.result:type_name -> aimo.PostAimResponse.PostAimResult
	19, // 5: aimo.PutAimResponse.response:type_name -> aimo.DefaultResponse
	19, // 6: aimo.GetAchievementMeansResponse.response:type_name -> aimo.DefaultResponse
	27, // 7: aimo.GetAchievementMeansResponse.result:type_name -> aimo.GetAchievementMeansResponse.GetAchievementMeansResult
	21, // 8: aimo.PostAchievementMeansRequest.achievement_means:type_name -> aimo.AchievementMeanModel
	19, // 9: aimo.PostAchievementMeanResponse.response:type_name -> aimo.DefaultResponse
	28, // 10: aimo.PostAchievementMeanResponse.result:type_name -> aimo.PostAchievementMeanResponse.PostAchievementMeansResult
	7,  // 11: aimo.PostAchievementMeansResponse.responses:type_name -> aimo.PostAchievementMeanResponse
	21, // 12: aimo.PutAchievementMeansRequest.achievement_means:type_name -> aimo.AchievementMeanModel
	29, // 13: aimo.PutAchievementMeansResponses.responses:type_name -> aimo.PutAchievementMeansResponses.PutAchievementMeanResponse
	19, // 14: aimo.GetAchievementMeanResponse.response:type_name -> aimo.DefaultResponse
	30, // 15: aimo.GetAchievementMeanResponse.result:type_name -> aimo.GetAchievementMeanResponse.GetAchievementMeanResult
	19, // 16: aimo.GetPersonalEvaResponse.response:type_name -> aimo.DefaultResponse
	31, // 17: aimo.GetPersonalEvaResponse.result:type_name -> aimo.GetPersonalEvaResponse.GetPersonalEvaResult
	19, // 18: aimo.GetEvaluationBeforeResponse.response:type_name -> aimo.DefaultResponse
	32, // 19: aimo.GetEvaluationBeforeResponse.result:type_name -> aimo.GetEvaluationBeforeResponse.GetEvaluationBeforeResult
	19, // 20: aimo.GetEvaluationResponse.response:type_name -> aimo.DefaultResponse
	33, // 21: aimo.GetEvaluationResponse.result:type_name -> aimo.GetEvaluationResponse.GetEvaluationResult
	19, // 22: aimo.GetComprehensiveCommentResponse.response:type_name -> aimo.DefaultResponse
	34, // 23: aimo.GetComprehensiveCommentResponse.result:type_name -> aimo.GetComprehensiveCommentResponse.GetComprehenesiveCommentResult
	19, // 24: aimo.PostDefaultResponse.response:type_name -> aimo.DefaultResponse
	35, // 25: aimo.PostDefaultResponse.result:type_name -> aimo.PostDefaultResponse.PostResult
	19, // 26: aimo.PutDefaultResponse.response:type_name -> aimo.DefaultResponse
	36, // 27: aimo.AimModel.created_at:type_name -> google.protobuf.Timestamp
	36, // 28: aimo.AimModel.updated_at:type_name -> google.protobuf.Timestamp
	36, // 29: aimo.AchievementMeanModel.created_at:type_name -> google.protobuf.Timestamp
	36, // 30: aimo.AchievementMeanModel.updated_at:type_name -> google.protobuf.Timestamp
	21, // 31: aimo.GetAchievementMeansResponse.GetAchievementMeansResult.achievement_means:type_name -> aimo.AchievementMeanModel
	19, // 32: aimo.PutAchievementMeansResponses.PutAchievementMeanResponse.response:type_name -> aimo.DefaultResponse
	21, // 33: aimo.GetAchievementMeanResponse.GetAchievementMeanResult.achievementMean:type_name -> aimo.AchievementMeanModel
	22, // 34: aimo.GetPersonalEvaResponse.GetPersonalEvaResult.personalEva:type_name -> aimo.PersonalEvaModel
	23, // 35: aimo.GetEvaluationBeforeResponse.GetEvaluationBeforeResult.evaluationBefore:type_name -> aimo.EvaluationBeforeModel
	24, // 36: aimo.GetEvaluationResponse.GetEvaluationResult.evaluation:type_name -> aimo.EvaluationModel
	25, // 37: aimo.GetComprehensiveCommentResponse.GetComprehenesiveCommentResult.comprehensiveComment:type_name -> aimo.ComprehensiveCommentModel
	0,  // 38: aimo.aimo.getAim:input_type -> aimo.GetAimRequest
	20, // 39: aimo.aimo.postAim:input_type -> aimo.AimModel
	20, // 40: aimo.aimo.putAim:input_type -> aimo.AimModel
	21, // 41: aimo.aimo.getAchievementMeans:input_type -> aimo.AchievementMeanModel
	6,  // 42: aimo.aimo.postAchievementMeans:input_type -> aimo.PostAchievementMeansRequest
	9,  // 43: aimo.aimo.putAchievementMeans:input_type -> aimo.PutAchievementMeansRequest
	11, // 44: aimo.aimo.getAchievementMean:input_type -> aimo.GetAchievementMeanRequest
	21, // 45: aimo.aimo.postAchievementMean:input_type -> aimo.AchievementMeanModel
	21, // 46: aimo.aimo.putAchievementMean:input_type -> aimo.AchievementMeanModel
	22, // 47: aimo.aimo.getPersonalEva:input_type -> aimo.PersonalEvaModel
	22, // 48: aimo.aimo.postPersonalEva:input_type -> aimo.PersonalEvaModel
	22, // 49: aimo.aimo.putPersonalEva:input_type -> aimo.PersonalEvaModel
	23, // 50: aimo.aimo.getEvaluationBefore:input_type -> aimo.EvaluationBeforeModel
	23, // 51: aimo.aimo.postEvaluationBefore:input_type -> aimo.EvaluationBeforeModel
	23, // 52: aimo.aimo.putEvaluationBefore:input_type -> aimo.EvaluationBeforeModel
	24, // 53: aimo.aimo.getEvaluation:input_type -> aimo.EvaluationModel
	24, // 54: aimo.aimo.postEvaluation:input_type -> aimo.EvaluationModel
	24, // 55: aimo.aimo.putEvaluation:input_type -> aimo.EvaluationModel
	25, // 56: aimo.aimo.getComprehensiveComment:input_type -> aimo.ComprehensiveCommentModel
	25, // 57: aimo.aimo.postComprehensiveComment:input_type -> aimo.ComprehensiveCommentModel
	25, // 58: aimo.aimo.putComprehensiveComment:input_type -> aimo.ComprehensiveCommentModel
	1,  // 59: aimo.aimo.getAim:output_type -> aimo.GetAimResponse
	3,  // 60: aimo.aimo.postAim:output_type -> aimo.PostAimResponse
	4,  // 61: aimo.aimo.putAim:output_type -> aimo.PutAimResponse
	5,  // 62: aimo.aimo.getAchievementMeans:output_type -> aimo.GetAchievementMeansResponse
	8,  // 63: aimo.aimo.postAchievementMeans:output_type -> aimo.PostAchievementMeansResponse
	10, // 64: aimo.aimo.putAchievementMeans:output_type -> aimo.PutAchievementMeansResponses
	12, // 65: aimo.aimo.getAchievementMean:output_type -> aimo.GetAchievementMeanResponse
	7,  // 66: aimo.aimo.postAchievementMean:output_type -> aimo.PostAchievementMeanResponse
	18, // 67: aimo.aimo.putAchievementMean:output_type -> aimo.PutDefaultResponse
	13, // 68: aimo.aimo.getPersonalEva:output_type -> aimo.GetPersonalEvaResponse
	17, // 69: aimo.aimo.postPersonalEva:output_type -> aimo.PostDefaultResponse
	18, // 70: aimo.aimo.putPersonalEva:output_type -> aimo.PutDefaultResponse
	14, // 71: aimo.aimo.getEvaluationBefore:output_type -> aimo.GetEvaluationBeforeResponse
	17, // 72: aimo.aimo.postEvaluationBefore:output_type -> aimo.PostDefaultResponse
	18, // 73: aimo.aimo.putEvaluationBefore:output_type -> aimo.PutDefaultResponse
	15, // 74: aimo.aimo.getEvaluation:output_type -> aimo.GetEvaluationResponse
	17, // 75: aimo.aimo.postEvaluation:output_type -> aimo.PostDefaultResponse
	18, // 76: aimo.aimo.putEvaluation:output_type -> aimo.PutDefaultResponse
	16, // 77: aimo.aimo.getComprehensiveComment:output_type -> aimo.GetComprehensiveCommentResponse
	17, // 78: aimo.aimo.postComprehensiveComment:output_type -> aimo.PostDefaultResponse
	18, // 79: aimo.aimo.putComprehensiveComment:output_type -> aimo.PutDefaultResponse
	59, // [59:80] is the sub-list for method output_type
	38, // [38:59] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_proto_aimo_proto_init() }
func file_proto_aimo_proto_init() {
	if File_proto_aimo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_aimo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAimResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAchievementMeansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAchievementMeansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAchievementMeanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAchievementMeansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAchievementMeansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAchievementMeansResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAchievementMeanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAchievementMeanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalEvaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEvaluationBeforeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEvaluationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComprehensiveCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AimModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementMeanModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonalEvaModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationBeforeModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComprehensiveCommentModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAimResponse_PostAimResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAchievementMeansResponse_GetAchievementMeansResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAchievementMeanResponse_PostAchievementMeansResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAchievementMeansResponses_PutAchievementMeanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAchievementMeanResponse_GetAchievementMeanResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalEvaResponse_GetPersonalEvaResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEvaluationBeforeResponse_GetEvaluationBeforeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEvaluationResponse_GetEvaluationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComprehensiveCommentResponse_GetComprehenesiveCommentResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aimo_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDefaultResponse_PostResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_aimo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_aimo_proto_goTypes,
		DependencyIndexes: file_proto_aimo_proto_depIdxs,
		MessageInfos:      file_proto_aimo_proto_msgTypes,
	}.Build()
	File_proto_aimo_proto = out.File
	file_proto_aimo_proto_rawDesc = nil
	file_proto_aimo_proto_goTypes = nil
	file_proto_aimo_proto_depIdxs = nil
}
